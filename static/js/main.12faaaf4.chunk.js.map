{"version":3,"sources":["components/StockPricesTableContainer/StockPricesTableContainer.js","redux/StockTicker/StockTicker.actions.js","components/StockTickerSearchButton/StockTickerSearchButton.js","components/StockTickerSearchInput/StockTickerSearchInput.js","components/StockTickerSearchContainer/StockTickerSearchContainer.js","components/TopAppBarTitle/TopAppBarTitle.js","components/TopAppBar/TopAppBar.js","App.js","redux/StockTicker/StockTicker.epics.js","redux/StockTicker/StockTicker.reducer.js","redux/root.reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["connect","state","activeStockSymbol","stockTicker","closingPricesDaily","closingPricesDailyList","map","priceDataDaily","year","month","day","closingPriceDaily","fetchStockPrices","createAction","fetchStockPricesSuccess","StockTickerSearchButton","onSubmit","className","onClick","StockTickerSearchInput","inputValue","onChange","type","value","dispatch","StockTickerActions","useState","setInputValue","target","TopAppBarTitle","title","TopAppBar","App","getRapidAPITimeSeriesDaily","response","getRapidAPIClosingPricesDaily","timeSeriesDaily","Object","keys","getRapidAPITimeSeriesDates","date","split","getRapidAPIStockSymbol","getRapidAPIResponseMetaData","reducer","createReducer","builder","addCase","action","payload","stockSymbol","epics","action$","pipe","ofType","mergeMap","ajax","url","method","headers","process","rootEpic","store$","dependencies","combineEpics","catchError","error","source","console","rootReducer","combineReducers","stockTickerReducer","epicMiddleware","createEpicMiddleware","middleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","configureStore","run","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12faaaf4.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction StockPricesTableContainer({ activeStockSymbol, closingPricesDaily }) {\n  const closingPricesDailyList = closingPricesDaily.map((priceDataDaily) => {\n    return (\n      <li>\n        Year: {priceDataDaily.year}, Month: {priceDataDaily.month}, Day:{' '}\n        {priceDataDaily.day}, Closing Price: {priceDataDaily.closingPriceDaily}\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <p>{activeStockSymbol}</p>\n      <ul>{closingPricesDailyList}</ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    activeStockSymbol: state.stockTicker.activeStockSymbol,\n    closingPricesDaily: state.stockTicker.closingPricesDaily,\n  };\n};\n\nexport default connect(mapStateToProps)(StockPricesTableContainer);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchStockPrices = createAction('STOCK_PRICES_FETCH');\n\nexport const fetchStockPricesSuccess = createAction(\n  'STOCK_PRICES_FETCH_SUCCESS'\n);\n","import React from 'react'\n\nfunction StockTickerSearchButton({ onSubmit }) {\n  return (\n    <>\n      <button className=\"ml-4 focus:outline-none\" onClick={onSubmit}>\n        Submit\n      </button>\n    </>\n  );\n}\n\nexport default StockTickerSearchButton\n","function StockTickerSearchInput({ inputValue, onChange }) {\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={onChange}\n        className=\"border focus:outline-none\"></input>\n    </>\n  );\n}\n\nexport default StockTickerSearchInput;\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as StockTickerActions from '../../redux/StockTicker/StockTicker.actions';\nimport StockTickerSearchButton from '../StockTickerSearchButton/StockTickerSearchButton';\nimport StockTickerSearchInput from '../StockTickerSearchInput/StockTickerSearchInput';\n\nfunction StockTickerSearchContainer({ fetchStockPrices }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = ({ target }) => {\n    setInputValue(target.value);\n  };\n\n  const handleSubmit = () => {\n    fetchStockPrices(inputValue);\n  };\n\n  return (\n    <>\n      <StockTickerSearchInput onChange={handleChange} inputValue={inputValue} />\n      <StockTickerSearchButton onSubmit={handleSubmit} />\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchStockPrices: (stockTicker) =>\n      dispatch(StockTickerActions.fetchStockPrices(stockTicker)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(StockTickerSearchContainer);\n","const TopAppBarTitle = ({ title }) => {\n  return <h1 className=\"font-bold\">{title}</h1>;\n};\n\nexport default TopAppBarTitle;\n","import TopAppBarTitle from '../TopAppBarTitle/TopAppBarTitle';\n\nconst TopAppBar = ({ title }) => {\n  return (\n    <div className=\"flex items-center h-16 px-8 py-4 text-lg bg-gray-200\">\n      <TopAppBarTitle title={title}></TopAppBarTitle>\n    </div>\n  );\n};\n\nexport default TopAppBar;\n","import StockPricesTableContainer from './components/StockPricesTableContainer/StockPricesTableContainer';\nimport StockTickerSearchContainer from './components/StockTickerSearchContainer/StockTickerSearchContainer';\nimport TopAppBar from './components/TopAppBar/TopAppBar';\n\nfunction App() {\n  return (\n    <div>\n      <TopAppBar title=\"Investment Dashboard\"></TopAppBar>\n      <div>\n        <StockTickerSearchContainer />\n      </div>\n      <StockPricesTableContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ofType } from 'redux-observable';\nimport { ajax } from 'rxjs/ajax';\nimport { map, mergeMap } from 'rxjs/operators';\nimport * as StockTickerActions from './StockTicker.actions';\n\nexport const fetchStockPricesEpic = (action$) =>\n  action$.pipe(\n    ofType(StockTickerActions.fetchStockPrices),\n    mergeMap((action) =>\n      ajax({\n        url: `https://alpha-vantage.p.rapidapi.com/query?function=TIME_SERIES_DAILY&symbol=${action.payload}&outputsize=full&datatype=json`,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY,\n          'x-rapidapi-host': process.env.REACT_APP_RAPID_API_HOST,\n        },\n      }).pipe(\n        map((response) => {\n          const timeSeriesDaily = getRapidAPITimeSeriesDaily(response);\n\n          const closingPricesDaily = getRapidAPIClosingPricesDaily(\n            timeSeriesDaily\n          );\n\n          const stockSymbol = getRapidAPIStockSymbol(response);\n\n          return StockTickerActions.fetchStockPricesSuccess({\n            stockSymbol,\n            closingPricesDaily,\n          });\n        })\n      )\n    )\n  );\n\nconst getRapidAPITimeSeriesDaily = (response) => {\n  return response.response['Time Series (Daily)'];\n};\n\nconst getRapidAPITimeSeriesDates = (timeSeriesDaily) => {\n  return Object.keys(timeSeriesDaily);\n};\n\nconst getRapidAPIClosingPricesDaily = (timeSeriesDaily) => {\n  const timeSeriesDates = getRapidAPITimeSeriesDates(timeSeriesDaily);\n  return timeSeriesDates.map((date) => {\n    const priceDataDaily = timeSeriesDaily[date];\n    const closingPriceDaily = priceDataDaily['4. close'];\n    const [year, month, day] = date.split('-');\n    return {\n      year,\n      month,\n      day,\n      closingPriceDaily,\n    };\n  });\n};\n\nconst getRapidAPIResponseMetaData = (response) => {\n  return response.response['Meta Data'];\n};\n\nconst getRapidAPIStockSymbol = (response) => {\n  const responseMetaData = getRapidAPIResponseMetaData(response);\n  return responseMetaData['2. Symbol'];\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as StockTickerActions from './StockTicker.actions';\n\nconst initialState = {\n  activeStockSymbol: '',\n  closingPricesDaily: [],\n};\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder.addCase(\n    StockTickerActions.fetchStockPricesSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        activeStockSymbol: action.payload.stockSymbol,\n        closingPricesDaily: action.payload.closingPricesDaily,\n      };\n    }\n  );\n});\n\nexport default reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { combineEpics } from 'redux-observable';\nimport { catchError } from 'rxjs/operators';\nimport { fetchStockPricesEpic } from '../redux/StockTicker/StockTicker.epics';\nimport stockTickerReducer from './StockTicker/StockTicker.reducer';\n\nconst epics = [fetchStockPricesEpic];\n\nexport const rootEpic = (action$, store$, dependencies) =>\n  combineEpics(...epics)(action$, store$, dependencies).pipe(\n    catchError((error, source) => {\n      console.error(error);\n      return source;\n    })\n  );\n\nexport const rootReducer = combineReducers({\n  stockTicker: stockTickerReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic, rootReducer } from './root.reducer';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst middleware = [epicMiddleware];\n\nexport default function initializeStore() {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware,\n  });\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}